#!/usr/bin/env ruby
require "rubygems"
require "pivotal-tracker"
require "rainbow"
require "pp"
require_relative "app_config"

# ----------------------------------------------------------
# Load config

config = nil
begin
  config = AppConfig.load
rescue Exception => e
  puts e
  exit 1
end

# ----------------------------------------------------------
# Init

PivotalTracker::Client.token = config.api_key
project= PivotalTracker::Project.find config.project

# ----------------------------------------------------------
# Main app code

require "commander/import"
require "pivotal-tracker"

program :version, "1.0"
program :description, "Pivotal Tracker command line client."

command :mine do |c|
  c.syntax = "pivotal-slacker mine [options]"
  c.summary = ""
  c.description = "List your stories in pivotal tracker."
  c.example "description", "command example"
  c.option "--some-switch", "Some switch that does something"
  c.action do |args, options|
    # Do something or c.when_called Pivotal-slacker::Commands::Mine
    
    states = %w{unstarted started finished accepted rejected}
    owned_by = config.user
    
    puts "Looking for stories owned by #{owned_by} in states: #{states}"

    stories = project.stories.all(:owned_by => owned_by, :current_state => states)
    stories.each do |story|
      id = story.id.to_s.color("#404040")
      name = story.name.color(:green)
      state = story.current_state
      
      puts "[#{id}] #{name}, #{state}"
    end
    # stories.each do |story|
    #   
    #   puts "[#{story.id.to_s.color("#404040")}] "
    #     + "#{story.name}".color(:green) + " "
    #     + story.current_state
    # end
  end
end

command :create do |c|
  c.syntax = "pivotal-slacker create [options]"
  c.summary = ""
  c.description = ""
  c.example "description", "command example"
  c.option "--some-switch", "Some switch that does something"
  c.action do |args, options|
    # Do something or c.when_called Pivotal-slacker::Commands::Create
  end
end

